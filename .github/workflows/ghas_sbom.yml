name: SBOM-and-VEX-Generation
on:
  push:
    branches: [ main ]

# Grant permissions for uploading to dependency graph if using that feature
permissions:
  contents: write   # needed for dependency submission API (uses GITHUB_TOKEN)&#8203;:contentReference[oaicite:6]{index=6}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      # Optional: Run a Trivy vulnerability scan (for informational purposes)
      - name: Scan for vulnerabilities (Trivy)
        uses: aquasecurity/trivy-action@0.30.0  # using latest Trivy Action as of Apr 2025&#8203;:contentReference[oaicite:7]{index=7}
        with:
          scan-type: 'fs'           # scan the filesystem (repo contents)&#8203;:contentReference[oaicite:8]{index=8}
          scan-ref: '.'             # target the current directory (checked-out code)&#8203;:contentReference[oaicite:9]{index=9}
          format: 'table'           # human-readable table output in logs (no file output)
          severity: 'MEDIUM,HIGH,CRITICAL'  # limit to important severity levels
          exit-code: '0'            # don't fail the job even if vulns are found&#8203;:contentReference[oaicite:10]{index=10}

      - name: Generate SBOM (CycloneDX format)
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'           # scan local filesystem for dependencies
          scan-ref: '.'             # target the repository root
          format: 'cyclonedx'       # output an SBOM in CycloneDX JSON format&#8203;:contentReference[oaicite:11]{index=11}
          output: 'sbom.cdx.json'   # save SBOM to file
          exit-code: '0'            # do not fail on vulnerabilities (SBOM only)

      - name: Generate VEX document (CycloneDX format)
        run: | 
          cat > trivy.vex.cdx.json << 'EOF'
          {
            "bomFormat": "CycloneDX",
            "specVersion": "1.5",
            "version": 1,
            "vulnerabilities": [
              {
                "id": "CVE-2020-8911",
                "analysis": {
                  "state": "not_affected",
                  "justification": "code_not_reachable",
                  "response": [ "will_not_fix", "update" ],
                  "detail": "The vulnerable function is not called."
                },
                "affects": [
                  {
                    "ref": "urn:cdx:3e671687-395b-41f5-a30f-a58921a69b79/1#pkg:golang/github.com/aws/aws-sdk-go@v1.44.234"
                  }
                ]
              }
            ]
          }
          EOF

      # Optional: Submit SBOM to GitHub Dependency Graph for visibility in the repo's dependency graph
      - name: Submit SBOM to GitHub Dependency Graph (optional)
        if: always()  # ensure this runs (but you can restrict when to run it)
        uses: aquasecurity/trivy-action@0.30.0
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'github'                 # GitHub dependency snapshot format&#8203;:contentReference[oaicite:12]{index=12}
          output: 'dependency-snapshot.json'  # output file (snapshot of dependencies)
          github-pat: ${{ secrets.GITHUB_TOKEN }}  # use token to submit to GitHub&#8203;:contentReference[oaicite:13]{index=13}
          exit-code: '0'

      - name: Upload SBOM artifact
        uses: actions/upload-artifact@v4
        with:
          name: sbom-cyclonedx
          path: sbom.cdx.json

      - name: Upload VEX artifact
        uses: actions/upload-artifact@v4
        with:
          name: vex-cyclonedx
          path: trivy.vex.cdx.json
